{"version":3,"sources":["app.js","ambientlight.js","audio.polyfill.js","canvas.polyfill.js","episode1.js","episode2.js","hyperspace.js","loader.js","navigation.js","selection.js","vote.js","main.js"],"names":["App","$","document","querySelector","bind","$$","querySelectorAll","AmbientLight","video","ambient","this","light1","light2","interval","goto","identifier","gotoUp","current","next","direction","Error","currentName","getAttribute","call","classList","remove","add","addEventListener","animationend","e","removeEventListener","setLocation","isChangingHash","home","window","location","href","substring","indexOf","reload","hash","setTimeout","gotoHash","homeFallback","length","page","contains","HYPERSPACE","callbacks","state","i","callback","push","AudioContext","webkitAudioContext","mozAudioContext","lastTime","vendors","x","requestAnimationFrame","cancelAnimationFrame","element","currTime","Date","getTime","timeToCall","Math","max","id","clearTimeout","prototype","play","self","setInterval","applyTo","children","canvas","createElement","getContext","width","height","appendChild","drawImage","toggle","stop","clearInterval","episodeIsPlaying","ambientLight","innerWidth","innerHeight","audioContext","sourceNode","analyserNode","javascriptNode","amplitudeArray","frequencyArray","context","audioData","audioPlaying","middleWidth","middleHeight","lastDraw","energyInterval","averageVolume","sinOffset","PI","playSound","buffer","start","loop","onError","console","warn","strokeStyle","shadowBlur","shadowColor","drawEnergy","lineWidth","k","amplitudeLength","amplitudeOffset","amplitudeDraw","beginPath","moveTo","lineTo","random","size","stroke","drawSound","clearCanvas","value","frenquencyLength","frenquencyOffset","frequencyDraw","sin","cos","clearRect","ex","url","request","createBufferSource","createAnalyser","createScriptProcessor","Uint8Array","frequencyBinCount","connect","destination","currentTime","now","array","values","getAverageVolume","getByteTimeDomainData","getByteFrequencyData","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","send","pause","canvasEnergy","circles","initialized","energyCtx","energyWidth","energyHeight","particles","render","init","config","count","circleMaxWidth","circlesEl","getElementById","node","style","isInitialized","renderFrame","frequencyData","color_gradient","circle","cssText","backgroundColor","create_particle","particle","speed","y","radius","fillStyle","arc","fill","draw","drawing","GLOBAL_SPEED","HYPERSPACE_RUN","select","stars","createStar","randomX","randomY","color","xs","ys","s","lineCap","urls","Image","src","preloadImages","loader","begin","elements","preventDefault","lastMove","leftOffset","screen","rightOffset","screenScale","selectCards","percentDivisor","selectionListener","event","percent","screenX","transform","buttons","bindVote","elt","innerHTML"],"mappings":"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","file":"script.js","sourcesContent":["/**\n * Create App object\n *\n */\n\nvar App = {},\n    $ = document.querySelector.bind(document),\n    $$ = document.querySelectorAll.bind(document);\n\n(function () {\n\n    App.goto = function (identifier, gotoUp) {\n        var current = $('section.visible'),\n            next = $('.page.' + identifier),\n            direction = gotoUp ? 'up' : 'down';\n\n        if (!next || typeof gotoUp !== 'boolean') {\n            throw new Error('Wrong arguments: ' + next + ', ' + gotoUp);\n        } else if (current == next) {\n            throw new Error('Moving to the same page..');\n        } else {\n            if (current) {\n                var currentName = current.getAttribute('data-page');\n                App.call(currentName, 'unloading');\n                current.classList.remove('visible');\n                current.classList.add('exit-' + direction);\n                current.addEventListener('animationend', function animationend(e) {\n                    App.call(currentName, 'unloaded');\n                    current.removeEventListener('animationend', animationend);\n                    current.classList.remove('exit-' + direction);\n                });\n            }\n            App.call(identifier, 'loading');\n            next.classList.add('visible');\n            next.classList.add('enter-' + direction);\n            next.addEventListener('animationend', function animationend(e) {\n                App.call(identifier, 'loaded');\n                next.removeEventListener('animationend', animationend);\n                next.classList.remove('enter-' + direction);\n                if (identifier !== 'home') {\n                    App.setLocation(identifier);\n                }\n            });\n        }\n    };\n\n    App.home = function () {\n        // Rerun the page to restart the canvas\n        if (window.location.href) {\n             window.location.href = window.location.href.substring(0, window.location.href.indexOf('#') - 1);\n        } else {\n            window.location.reload();\n        }\n    };\n\n    var isChangingHash = false;\n\n    App.setLocation = function (hash) {\n        isChangingHash = true;\n        window.location.hash = '#/' + hash;\n        setTimeout(function () {\n            isChangingHash = false;\n        }, 1);\n    };\n\n    App.gotoHash = function (homeFallback) {\n        if (isChangingHash) return;\n        if (window.location.hash && window.location.hash.length > 2) {\n            var hash = window.location.hash.substring(2),\n                page = $('.page.' + hash);\n\n            if (hash === 'home') {\n                App.home();\n                return;\n            } else if (page && page.classList.contains('page')) {\n                var current = $('section.visible');\n                if (current) {\n                    current.classList.remove('visible');\n                    var currentName = current.getAttribute('data-page');\n                    App.call(currentName, 'unloading');\n                    App.call(currentName, 'unloaded');\n                }\n                page.classList.add('visible');\n                App.call(hash, 'loading');\n                App.call(hash, 'loaded');\n                window.HYPERSPACE = false;\n                return;\n            }\n        }\n        if (homeFallback) {\n            App.home();\n        }\n    };\n\n    var callbacks = {};\n    \n    App.call = function (page, state) {\n        if (callbacks[page] && callbacks[page][state]) {\n            for (var i = callbacks[page][state].length - 1; i >= 0; i--) {\n                callbacks[page][state][i]();\n            }\n        }\n    };\n\n    App.bind = function (page, state, callback) {\n        if (!callbacks[page]) {\n            callbacks[page] = {};\n        }\n        if (!callbacks[page][state]) {\n            callbacks[page][state] = [];\n        }\n        callbacks[page][state].push(callback);\n    };\n\n})();\n\n","\nfunction AmbientLight(video, ambient) {\n    this.video = video;\n    this.ambient = ambient;\n    this.light1 = ambient.querySelector('.light-1');\n    this.light2 = ambient.querySelector('.light-2');\n    this.interval = -1;\n}\n\nAmbientLight.prototype.play = function() {\n    this.ambient.classList.add('active');\n    var self = this;\n\n    this.interval = setInterval(function () {\n\n        var applyTo = self.light1.classList.contains('active') ? self.light2 : self.light1;\n\n        // We show a 1x1 canvas in 100% width/height\n\n        if (!applyTo.children[0]) {\n            // If canvas doesn't exist, we create it\n            var canvas = document.createElement('canvas'),\n                context = canvas.getContext('2d');\n\n            canvas.width = 1;\n            canvas.height = 1;\n            canvas.classList.add('background');\n\n            applyTo.appendChild(canvas);\n        }\n\n        applyTo.children[0].getContext('2d').drawImage(self.video, 0, 0, 1, 1);\n\n        // As we can't do transition on gradient, we use 2 layers\n        // And we apply gradient to one, and do a transition on opacity\n        // Then next time we apply gradient to other one, etc...\n        self.light1.classList.toggle('active');\n        self.light2.classList.toggle('active');\n\n    }, 1000);\n};\n\nAmbientLight.prototype.stop = function() {\n    this.ambient.classList.remove('active');\n    clearInterval(this.interval);\n};\n","\nwindow.AudioContext = (function() {\n    return  window.AudioContext || window.webkitAudioContext || window.mozAudioContext;\n})();\n","/* Compatible avec tous les navigateurs */\n(function() {\n    var lastTime = 0;\n    var vendors = ['webkit', 'moz'];\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame = window[vendors[x]+'RequestAnimationFrame'];\n        window.cancelAnimationFrame =\n          window[vendors[x]+'CancelAnimationFrame'] || window[vendors[x]+'CancelRequestAnimationFrame'];\n    }\n\n    if (!window.requestAnimationFrame)\n        window.requestAnimationFrame = function(callback, element) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var id = window.setTimeout(function() { callback(currTime + timeToCall); },\n              timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n\n    if (!window.cancelAnimationFrame)\n        window.cancelAnimationFrame = function(id) {\n            clearTimeout(id);\n        };\n}());\n","\n(function () {\n\n    var episodeIsPlaying = false;\n\n    var canvas = $('.episode-1 .drawing canvas');\n    var video = $('.episode-1 .video');\n    var ambientLight = new AmbientLight(video, $('.episode-1 .ambient'));\n\n    if (!canvas || !canvas.getContext) return;\n\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    var context = canvas.getContext('2d'),\n        width = canvas.width,\n        height = canvas.height;\n\n    var frequency = 30,\n        amplitudeCount = 30,\n        frequencyCount = 40;\n\n    // Tutorial from: http://apprentice.craic.com/tutorials/30\n\n    var audioContext;\n    var audioBuffer;\n    var sourceNode;\n    var analyserNode;\n    var javascriptNode;\n    var audioData = null;\n    var audioPlaying = false;\n    var sampleSize = 1024;\n    var amplitudeArray;\n    var frequencyArray;\n    var audioUrl = 'media/episode1.mp3';\n    var middleWidth = ~~(width / 2);\n    var middleHeight = ~~(height / 2);\n    var lastDraw = 0;\n    var energyInterval = -1;\n    var averageVolume = 0;\n    var sinOffset = Math.PI / 2;\n\n    var setupAudioNodes = function () {\n        sourceNode     = audioContext.createBufferSource();\n        analyserNode   = audioContext.createAnalyser();\n        javascriptNode = audioContext.createScriptProcessor(sampleSize, 1, 1);\n\n        // Create the array for the data values\n        amplitudeArray = new Uint8Array(analyserNode.frequencyBinCount);\n        frequencyArray = new Uint8Array(analyserNode.frequencyBinCount);\n        // Now connect the nodes together\n        sourceNode.connect(audioContext.destination);\n        sourceNode.connect(analyserNode);\n        analyserNode.connect(javascriptNode);\n        javascriptNode.connect(audioContext.destination);\n    };\n\n    // Load the audio from the URL via Ajax and store it in global variable audioData\n    // Note that the audio load is asynchronous\n    var loadSound = function (url) {\n        var request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n        // When loaded, decode the data and play the sound\n        request.onload = function () {\n            audioContext.decodeAudioData(request.response, function (buffer) {\n                audioData = buffer;\n                playSound(audioData);\n            }, onError);\n        };\n        request.send();\n    };\n\n    // Play the audio and loop until stopped\n    var playSound = function (buffer) {\n        sourceNode.buffer = buffer;\n        // sourceNode.start();    // Play the sound now\n        sourceNode.start(0);\n        sourceNode.loop = true;\n        audioPlaying = true;\n    };\n\n    var onError = function (e) {\n        console.warn(e);\n    };\n\n    var getAverageVolume = function (array) {\n        var values = 0;\n        var average;\n \n        var length = array.length;\n \n        // get all the frequency amplitudes\n        for (var i = 0; i < length; i++) {\n            values += array[i];\n        }\n \n        average = values / length;\n        return average;\n    };\n\n    context.strokeStyle = 'white';\n    context.shadowBlur = 100;\n    context.shadowColor = 'rgb(220, 20, 220)';\n\n    var drawEnergy = function () {\n        // RANDOM ELECTRIC ARC\n\n        // clearCanvas();\n        context.lineWidth = 3;\n\n        var k, i, value = 0;\n        var amplitudeLength = amplitudeArray.length;\n        var amplitudeOffset = ~~(amplitudeLength / amplitudeCount);\n        var amplitudeDraw = ~~(width / amplitudeCount);\n        var size = 150;\n\n        context.beginPath();\n        context.moveTo(0, middleHeight);\n        k = 0;\n        for (i = amplitudeOffset; i < amplitudeLength - amplitudeOffset; i += amplitudeOffset) {\n            k++;\n            context.lineTo(k * amplitudeDraw, (Math.random() * size - size/2) * averageVolume + middleHeight);\n        }\n        context.lineTo(width, middleHeight);\n        context.stroke();\n    };\n\n    var drawSound = function () {\n        if (episodeIsPlaying) {\n            clearCanvas();\n\n            var k, i, value = 0;\n\n            // FREQUENCY VARIABLE\n\n            var frenquencyLength = frequencyArray.length - 300;\n            var frenquencyOffset = ~~(frenquencyLength / frequencyCount);\n            var frequencyDraw = ~~(middleWidth / frequencyCount);\n\n            // DOUBLE FREQUENCY ARC - SYMMETRIC\n\n            context.lineWidth = ~~(3 + Math.random() * 6);\n            context.beginPath();\n            context.moveTo(0, middleHeight);\n\n            k = 0;\n            for (i = frenquencyLength - frenquencyOffset; i >= 0; i -= frenquencyOffset) {\n                k++;\n                value = frequencyArray[i + 5] / 256;\n                // context.lineTo(k * frequencyDraw, height - middleHeight - (value * middleHeight));\n                // context.lineTo(k * frequencyDraw, height - middleHeight - (value * middleHeight) * Math.sin(sinOffset + k / 5));\n                context.lineTo(k * frequencyDraw, height - middleHeight - (value * middleHeight) * Math.sin(sinOffset + k / 5) * averageVolume);\n            }\n\n            k = 0;\n            for (i = 0; i < frenquencyLength - frenquencyOffset * 2; i += frenquencyOffset) {\n                k++;\n                value = frequencyArray[i + 5] / 256;\n                // context.lineTo(middleWidth + k * frequencyDraw, height - middleHeight - (value * middleHeight));\n                // context.lineTo(middleWidth + k * frequencyDraw, height - middleHeight - (value * middleHeight) * Math.cos(sinOffset + k / 5));\n                context.lineTo(middleWidth + k * frequencyDraw, height - middleHeight - (value * middleHeight) * Math.cos(sinOffset + k / 5) * averageVolume);\n            }\n\n            context.lineTo(width, middleHeight);\n            context.stroke();\n\n            // AMPLITUDE VARIABLE\n\n            var amplitudeLength = amplitudeArray.length;\n            var amplitudeOffset = ~~(amplitudeLength / amplitudeCount);\n            var amplitudeDraw = ~~(width / amplitudeCount);\n\n            context.lineWidth = ~~(2 + Math.random() * 4);\n\n            context.beginPath();\n            context.moveTo(0, middleHeight);\n            k = 0;\n            for (i = amplitudeOffset; i < amplitudeLength - amplitudeOffset; i += amplitudeOffset) {\n                k++;\n                value = height - (height * amplitudeArray[i] / 256) - 1;\n                context.lineTo(k * amplitudeDraw, value);\n\n            }\n            context.lineTo(width, middleHeight);\n            context.stroke();\n\n\n            context.beginPath();\n            context.moveTo(0, middleHeight);\n            k = 0;\n            for (i = amplitudeLength - amplitudeOffset; i >= amplitudeOffset; i -= amplitudeOffset) {\n                k++;\n                value = height - (height * amplitudeArray[i] / 256) - 1;\n                context.lineTo(k * amplitudeDraw, value);\n            }\n            context.lineTo(width, middleHeight);\n            context.stroke();\n\n            // context.beginPath();\n            // context.moveTo(0, middleHeight);\n            // k = 0;\n            // for (i = amplitudeLength - amplitudeOffset; i >= amplitudeOffset; i -= amplitudeOffset) {\n            //     k++;\n            //     context.lineTo(k * amplitudeDraw, Math.random() * 50 - 25 + middleHeight);\n            // }\n            // context.lineTo(width, middleHeight);\n            // context.stroke();\n        }\n    };\n\n    var clearCanvas = function () {\n        context.clearRect(0, 0, width, height);\n    };\n\n    try {\n        audioContext = new AudioContext();\n    } catch (ex) {\n        console.warn('Web Audio API is not supported in this browser');\n    }\n\n\n    App.bind('episode-1', 'loaded', function () {\n        episodeIsPlaying = true;\n\n        setupAudioNodes();\n        video.currentTime = 0;\n        video.play();\n        ambientLight.play();\n\n        // setup the event handler that is triggered every time enough samples have been collected\n        // trigger the audio analysis and draw the results\n        javascriptNode.addEventListener('audioprocess', function (e) {\n            var now = new Date().getTime();\n            if (lastDraw > now - frequency) return;\n            lastDraw = now;\n            // get the Time Domain data for this sample\n            averageVolume = getAverageVolume(frequencyArray) / 100;\n            analyserNode.getByteTimeDomainData(amplitudeArray);\n            analyserNode.getByteFrequencyData(frequencyArray);\n\n            // draw the display if the audio is playing\n            if (audioPlaying === true) {\n                window.requestAnimationFrame(drawSound);\n            }\n        });\n\n        // Load the Audio the first time through, otherwise play it from the buffer\n        if (audioData === null) {\n            loadSound(audioUrl);\n        } else {\n            playSound(audioData);\n        }\n\n        energyInterval = setInterval(drawEnergy, 62);\n\n    });\n\n    App.bind('episode-1', 'unloading', function () {\n        clearInterval(energyInterval);\n        ambientLight.stop();\n        episodeIsPlaying = false;\n        sourceNode.stop(0);\n        audioPlaying = false;\n    });\n\n    App.bind('episode-1', 'unloaded', function () {\n        clearCanvas();\n        video.currentTime = 0;\n        video.pause();\n    });\n\n})();\n","\n(function () {\n\n    var episodeIsPlaying = false;\n\n    var canvas = $('.episode-2 .canvas');\n    var canvasEnergy = $('.episode-2 .drawing canvas');\n    var video = $('.episode-2 .video');\n    var ambientLight = new AmbientLight(video, $('.episode-2 .ambient'));\n\n    if (!canvas || !canvas.getContext) return;\n\n    canvas.width = 500;\n    canvas.height = 500;\n    canvasEnergy.width = window.innerWidth;\n    canvasEnergy.height = window.innerHeight;\n    var context = canvas.getContext('2d'),\n        energyCtx = canvasEnergy.getContext('2d'),\n        width = canvas.width,\n        height = canvas.height,\n        energyWidth = canvasEnergy.width,\n        energyHeight = canvasEnergy.height;\n\n    var frequency = 30,\n        amplitudeCount = 30,\n        frequencyCount = 40;\n\n    // Tutorial from: http://apprentice.craic.com/tutorials/30\n\n    var audioContext;\n    var audioBuffer;\n    var sourceNode;\n    var analyserNode;\n    var javascriptNode;\n    var audioData = null;\n    var audioPlaying = false;\n    var sampleSize = 1024;\n    var amplitudeArray;\n    var frequencyArray;\n    var audioUrl = 'media/episode2.mp3';\n    var middleWidth = ~~(energyWidth / 2);\n    var middleHeight = ~~(energyHeight / 2);\n    var lastDraw = 0;\n    var averageVolume = 0;\n    var particles = [];\n\n    var render = (function() {\n\n        var circles = [];\n        var initialized = false;\n        var height = 0;\n        var width = 0;\n        var init = function(config) {\n            var count = config.count;\n            width = config.width;\n            height = config.height;\n            var circleMaxWidth = (width * 0.106) >> 0;\n            var circlesEl = document.getElementById('circles');\n            for (var i = 0; i < count; i++) {\n                var node = document.createElement('div');\n                node.style.width = node.style.height = (i / count * circleMaxWidth) + 'px'; // increase the with and height of the circles\n                node.classList.add('circle'); // show circle\n                circles.push(node); // adds new circles\n                circlesEl.appendChild(node);\n               }\n            initialized = true;\n        };\n\n        var max = 256;\n\n        // make circles until he can't display another circle in the div\n        var renderFrame = function(frequencyData) {\n\n          /* Var for change gradient and opacity */\n          var color_gradient = 0;\n          var increment_value = 16;\n          var opacity = 0;\n          var opacity_value = 0.05;\n\n            for (var i = 0; i < circles.length; i++) {\n                var circle = circles[i];\n                // Scale dynamicaly permit to change the height/width with the FrequancyData of the song\n                //and divided by max to control the radius\n                circle.style.cssText = '-webkit-transform:scale(' + ((frequencyData[i] / max)) + ')';\n                //setTimeout(function(){ atom.style.display = 'block'; }, 9900);\n\n\n                /* Condition who change dynamicaly the value of the rgba */\n                  if(i < circles.length / 2 )\n                  {\n                    color_gradient += increment_value;\n                    if(i < 1/ 1.5) {\n                      opacity += opacity_value;\n                    } else {\n                        opacity += opacity_value;\n                    }\n                  }\n                  else\n                  {\n                    color_gradient -= increment_value;\n                  }\n\n                  // change the color of the circles\n                  circle.style.backgroundColor = 'rgba(0,0,'  + color_gradient + ',' + opacity_value + ')';\n           }\n        };\n        return {\n            init: init,\n            isInitialized: function() {\n                return initialized;\n            },\n            renderFrame: renderFrame\n        };\n\n    })();\n\n    var setupAudioNodes = function () {\n        sourceNode     = audioContext.createBufferSource();\n        analyserNode   = audioContext.createAnalyser();\n        javascriptNode = audioContext.createScriptProcessor(sampleSize, 1, 1);\n\n        // Create the array for the data values\n        amplitudeArray = new Uint8Array(analyserNode.frequencyBinCount);\n        frequencyArray = new Uint8Array(analyserNode.frequencyBinCount);\n        // Now connect the nodes together\n        sourceNode.connect(audioContext.destination);\n        sourceNode.connect(analyserNode);\n        analyserNode.connect(javascriptNode);\n        // analyserNode.fftSize = 64;\n        javascriptNode.connect(audioContext.destination);\n    };\n\n    // Load the audio from the URL via Ajax and store it in global variable audioData\n    // Note that the audio load is asynchronous\n    var loadSound = function (url) {\n        var request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n        // When loaded, decode the data and play the sound\n        request.onload = function () {\n            audioContext.decodeAudioData(request.response, function (buffer) {\n                audioData = buffer;\n                playSound(audioData);\n            }, onError);\n        };\n        request.send();\n    };\n\n    // Play the audio and loop until stopped\n    var playSound = function (buffer) {\n        sourceNode.buffer = buffer;\n        // sourceNode.start();    // Play the sound now\n        sourceNode.start(0);\n        sourceNode.loop = true;\n        audioPlaying = true;\n    };\n\n    var onError = function (e) {\n        console.warn(e);\n    };\n\n    var getAverageVolume = function (array) {\n        var values = 0;\n        var average;\n\n        var length = array.length;\n\n        // get all the frequency amplitudes\n        for (var i = 0; i < length; i++) {\n            values += array[i];\n        }\n\n        average = values / length;\n        return average;\n    };\n\n    var create_particle = function () {\n        var particle = {};\n        // position where the particle come\n        particle.x = 250;\n        particle.y = 250;\n        particle.speed = {};\n        particle.speed.x = Math.random() * 10 - 5;\n        particle.speed.y = Math.random() * 10 - 5;\n\n        particle.style = 'white'; // color gradient\n        particle.radius = 1; // made round particle\n        return particle;\n    };\n\n    var draw = function () {\n        for(var i = 0; i < particles.length; i++) {\n            var particle = particles [ i ];\n\n            if (particle.x < 0 || particle.x > canvas.width || particle.y < 0 || particle.y > canvas.height) {\n                particle = particles[i] = create_particle();\n            }\n\n            particle.x += particle.speed.x;\n            particle.y += particle.speed.y;\n\n            context.beginPath();\n            context.fillStyle = particle.style;\n            context.arc( particle.x, particle.y, particle.radius, 0, Math.PI * 2); // send particle at 360 degree\n            context.fill();\n        }\n    };\n\n    var drawSound = function () {\n        if (episodeIsPlaying) {\n            clearCanvas();\n            draw();\n\n            render.renderFrame(frequencyArray);\n\n            var k, i, value = 0;\n            energyCtx.strokeStyle = 'white';\n            energyCtx.shadowBlur = 100;\n            energyCtx.shadowColor = 'rgb(20, 20, 220)';\n\n            // FREQUENCY VARIABLE\n\n            var frenquencyLength = frequencyArray.length - 300;\n            var frenquencyOffset = ~~(frenquencyLength / frequencyCount);\n            var frequencyDraw = ~~(middleWidth / frequencyCount);\n            var drawing = -1;\n\n            // DOUBLE FREQUENCY ARC - SYMMETRIC\n\n            energyCtx.lineWidth = ~~(3 + Math.random() * 6);\n            energyCtx.beginPath();\n\n            k = 0;\n            for (i = frenquencyLength - frenquencyOffset; i >= 0; i -= frenquencyOffset) {\n                k++;\n                if (drawing > -1) {\n                    value = frequencyArray[i + 5] / 256;\n                    energyCtx.lineTo(k * frequencyDraw, energyHeight - middleHeight - (value * middleHeight));\n                } else if (frequencyArray[i + 5] / 256 > 0.1) {\n                    drawing = i;\n                    energyCtx.moveTo(k * frequencyDraw, middleHeight);\n                }\n            }\n\n            k = 0;\n            for (i = 0; i < frenquencyLength - frenquencyOffset * 2 - (frenquencyLength - drawing); i += frenquencyOffset) {\n                k++;\n                value = frequencyArray[i + 5] / 256;\n                energyCtx.lineTo(middleWidth + k * frequencyDraw, energyHeight - middleHeight - (value * middleHeight));\n            }\n            energyCtx.lineTo(middleWidth + k * frequencyDraw + frenquencyOffset, middleHeight);\n            energyCtx.stroke();\n\n            energyCtx.lineWidth = ~~(3 + Math.random() * 6);\n            energyCtx.beginPath();\n            energyCtx.moveTo(0, middleHeight);\n\n            k = 0;\n            drawing = -1;\n\n            for (i = frenquencyLength - frenquencyOffset; i >= 0; i -= frenquencyOffset) {\n                k++;\n                if (drawing > -1) {\n                    value = frequencyArray[i + 5] / 256;\n                    energyCtx.lineTo(k * frequencyDraw, energyHeight - middleHeight + (value * middleHeight));\n                } else if (frequencyArray[i + 5] / 256 > 0.1) {\n                    drawing = i;\n                    energyCtx.moveTo(k * frequencyDraw, middleHeight);\n                }\n            }\n\n            k = 0;\n            for (i = 0; i < frenquencyLength - frenquencyOffset * 2 - (frenquencyLength - drawing); i += frenquencyOffset) {\n                k++;\n                value = frequencyArray[i + 5] / 256;\n                energyCtx.lineTo(middleWidth + k * frequencyDraw, energyHeight - middleHeight + (value * middleHeight));\n            }\n\n            energyCtx.lineTo(middleWidth + k * frequencyDraw + frenquencyOffset, middleHeight);\n            energyCtx.stroke();\n\n        }\n    };\n    // clear canvas\n    var clearCanvas = function () {\n        context.clearRect(0, 0, width, height);\n        energyCtx.clearRect(0, 0, energyWidth, energyHeight);\n    };\n\n    try {\n        audioContext = new AudioContext();\n    } catch (ex) {\n        console.warn('Web Audio API is not supported in this browser');\n    }\n    //Create new particle\n    for (var i = 0; i < 100; i++) {\n        particles.push(create_particle());\n    }\n\n\n    App.bind('episode-2', 'loaded', function () {\n        episodeIsPlaying = true;\n\n        setupAudioNodes();\n        video.currentTime = 0;\n        video.play();\n        ambientLight.play();\n\n        if (!render.isInitialized()) {\n            render.init({\n                // count: analyserNode.frequencyBinCount,\n                count: 10,\n                width: 360,\n                height: 360\n            });\n        }\n\n        // setup the event handler that is triggered every time enough samples have been collected\n        // trigger the audio analysis and draw the results\n        javascriptNode.addEventListener('audioprocess', function (e) {\n            var now = new Date().getTime();\n            if (lastDraw > now - frequency) return;\n            lastDraw = now;\n            // get the Time Domain data for this sample\n            // averageVolume = getAverageVolume(frequencyArray) / 100;\n            // analyserNode.getByteTimeDomainData(amplitudeArray);\n            analyserNode.getByteFrequencyData(frequencyArray);\n\n            // draw the display if the audio is playing\n            if (audioPlaying === true) {\n                window.requestAnimationFrame(drawSound);\n            }\n        });\n\n        // Load the Audio the first time through, otherwise play it from the buffer\n        if (audioData === null) {\n            loadSound(audioUrl);\n        } else {\n            playSound(audioData);\n        }\n\n    });\n\n    App.bind('episode-2', 'unloading', function () {\n        ambientLight.stop();\n        episodeIsPlaying = false;\n        sourceNode.stop(0);\n        audioPlaying = false;\n    });\n\n    App.bind('episode-2', 'unloaded', function () {\n        clearCanvas();\n        video.currentTime = 0;\n        video.pause();\n    });\n\n})();\n","\n(function () {\n\n    var GLOBAL_SPEED = 0.1,\n        HYPERSPACE_RUN = true;\n\n    App.bind('home', 'unloading', function () {\n        var interval = setInterval(function () {\n            GLOBAL_SPEED = (GLOBAL_SPEED + 0.1) * 1.3;\n            if (GLOBAL_SPEED > 70) {\n                clearInterval(interval);\n            }\n        }, 100);\n\n        var home = $('.page.home'),\n            select = $('.page.select');\n\n        // select.addEventListener('animationend', function begin(e) {\n        //     select.removeEventListener('animationend', begin);\n        // });\n\n        home.classList.add('exit-hyperspace');\n        select.classList.add('enter-hyperspace');\n    });\n\n    App.bind('home', 'unloaded', function () {\n        HYPERSPACE_RUN = false;\n\n        var home = $('.page.home'),\n            select = $('.page.select');\n\n        home.classList.remove('visible');\n        home.classList.remove('exit-hyperspace');\n        select.classList.remove('enter-hyperspace');\n    });\n\n    (function (canvas) {\n\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n\n        if (canvas.getContext) {\n            var context = canvas.getContext('2d'),\n                width = canvas.width,\n                height = canvas.height,\n                starsCount = 100,\n                centerRadius = 100,\n                length = 10,\n                stars = [];\n\n            var createStar = function () {\n                var randomX = Math.random(),\n                    randomY = Math.random(),\n                    color = ~~(Math.random() * 80 + 20);\n\n                return {\n                    x: randomX * width,\n                    y: randomY * height,\n                    xs: (randomX * width - width/2) / 500,\n                    ys: (randomY * height - height/2) / 500,\n                    size: ~~(color / 20),\n                    length: Math.random() * length,\n                    color: 'rgb(' + color + ', ' + color + ', ' + ~~(color + Math.random() * 20) + ')'\n                };\n            };\n\n            for (var i = 0; i < starsCount; i++) {\n                stars.push(createStar());\n            }\n\n            (function loop() {\n                if (HYPERSPACE_RUN) {\n\n                    window.requestAnimationFrame(loop);\n                    context.clearRect(0, 0, width, height);\n\n                    for (var i = 0; i < starsCount; i++) {\n                        var s = stars[i];\n                        if (s.x < 0 || s.y < 0 || s.x > width || s.y > height) {\n                            s = stars[i] = createStar();\n                        }\n                        context.strokeStyle = s.color;\n                        context.lineWidth = s.size;\n                        context.shadowBlur = 5;\n                        context.lineCap = 'round';\n                        context.shadowColor = '#555';\n                        context.beginPath();\n                        context.moveTo(s.x, s.y);\n                        context.lineTo(s.x + 0.1 + s.length * s.xs * GLOBAL_SPEED, s.y + s.length * s.ys * GLOBAL_SPEED);\n                        context.stroke();\n                        s.x += s.xs * GLOBAL_SPEED;\n                        s.y += s.ys * GLOBAL_SPEED;\n                    }\n                }\n            })();\n        }\n\n    })($('.hyperspace'));\n\n})();","\n(function () {\n\n    var preloadImages = function (urls) {\n        for (var i = urls.length - 1; i >= 0; i--) {\n            var img = new Image();\n            img.src = urls[i];\n        }\n    };\n\n    App.init = function () {\n\n        preloadImages([\n            'img/film-1.jpg',\n            'img/film-2.jpg',\n            'img/film-3.jpg',\n            'img/film-4.jpg',\n            'img/film-5.jpg',\n            'img/film-6.jpg',\n            'img/film-7.jpg',\n            'img/lock.svg',\n            'img/star-wars-logo.svg',\n            'img/starship-left.png',\n            'img/starship-right.png',\n            'img/vote-left.jpg',\n            'img/vote-right.jpg',\n        ]);\n\n        window.addEventListener('load', function () {\n            var loader = $('section.loader');\n            if (loader) {\n                loader.addEventListener('transitionend', function () {\n                    loader.classList.remove('visible', 'fade-out');\n                });\n                loader.classList.add('fade-out');\n            }\n            if (window.location.hash && window.location.hash.length > 2) {\n                var hash = window.location.hash.substring(2),\n                    page = $('.page.' + hash);\n\n                if (page && page.classList.contains('page')) {\n                    page.classList.add('visible');\n                    App.call(hash, 'loading');\n                    App.call(hash, 'loaded');\n                    return;\n                }\n            }\n            $('.page.home').classList.add('visible');\n            App.call('home', 'loading');\n            App.call('home', 'loaded');\n        });\n\n    };\n\n})();\n","/**\n * Navigation between pages\n *\n */\n\n(function () {\n\n    // Bind begin button to hyperspace animation\n    $('.begin').addEventListener('click', function (e) {\n        App.call('home', 'unloading');\n        App.call('select', 'loading');\n        var select = $('.page.select');\n        select.addEventListener('animationend', function begin(e) { \n            select.removeEventListener('animationend', begin);\n            App.call('home', 'unloaded');\n            App.call('select', 'loaded');\n            $('.page.select').classList.add('visible');\n            App.setLocation('select');\n        });\n    });\n\n    // Bind navigation elements to animations\n    var bindNavigation = function (element) {\n        element.addEventListener('click', function (e) {\n            if (this.getAttribute('data-target')) {\n                App.goto(this.getAttribute('data-target'), this.getAttribute('data-direction') === 'up');\n            }\n            e.preventDefault();\n        });\n    };\n\n    var elements = $$('.navigation');\n    for (var i = elements.length - 1; i >= 0; i--) {\n        bindNavigation(elements[i]);\n    }\n\n    // Change page if hash change\n    window.addEventListener('hashchange', App.gotoHash);\n\n})();\n","/**\n * Episode selection\n *\n */\n\n(function () {\n\n    var select = {\n        lastMove: 0,\n        leftOffset: window.screen.width / 2 - 100,\n        rightOffset: 0,\n        screenScale: (100 - 100 / 1.75),\n        selectCards: $('.select .cards')\n    };\n\n    select.percentDivisor = window.screen.width - select.rightOffset - select.leftOffset;\n\n    var selectionListener = function(event) {\n        var now = new Date().getTime();\n        if (select.lastMove < now - 20) {\n\n            select.lastMove = now;\n            var percent = (event.screenX - select.leftOffset) / select.percentDivisor;\n            \n            if (percent < 0) {\n                percent = 0;\n            } else if (percent > 1) {\n                percent = 1;\n            }\n\n            select.selectCards.style.transform = 'translateZ(0) translateX(-' + percent * select.screenScale + '%)';\n        }\n    };\n\n    App.bind('select', 'loading', function () {\n        document.addEventListener('mousemove', selectionListener);\n    });\n\n    App.bind('select', 'unloading', function () {\n        document.removeEventListener('mousemove', selectionListener);\n    });\n\n})();\n","\n(function () {\n\n    var buttons = $$('.button-vote');\n    var bindVote = function (elt) {\n        elt.addEventListener('click', function (e) {\n            for (var i = buttons.length - 1; i >= 0; i--) {\n                buttons[i].innerHTML = 'VOTE';\n            }\n            elt.innerHTML = 'I Voted !';\n        });\n    };\n\n    for (var i = buttons.length - 1; i >= 0; i--) {\n        bindVote(buttons[i]);\n    }\n\n})();\n","\n// Load the page\nApp.init();\n"]}